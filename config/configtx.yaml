# CAPABILITIES
Capabilities:
  Application: &ApplicationCapabilities
    V2_0: true
  Orderer: &OrdererCapabilities
    V2_0: true
  Channel: &ChannelCapabilities
    V2_0: true

# ORGANIZATIONS
Organizations:
  - &Orderer
    Name: Orderer
    ID: OrdererMSP
    MSPDir: ./crypto-config/ordererOrganizations/natuni.edu/msp
    Policies: &OrdererPolicies
      Readers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('OrdererMSP.admin')"
      Endorsement:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"

  - &Natuni
    Name: Natuni
    ID: NatuniMSP
    MSPDir: ./crypto-config/peerOrganizations/natuni.edu/msp
    Policies: &NatuniPolicies
      Readers:
          Type: Signature
          Rule: "OR('NatuniMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('NatuniMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('NatuniMSP.admin')"
      Endorsement:
          Type: Signature
          Rule: "OR('NatuniMSP.member')"
    AnchorPeers:
      - Host: cit.natuni.edu
        Port: 7051
      - Host: cst.natuni.edu
        Port: 7051

  - &Privateuni
    Name: Privateuni
    ID: PrivateuniMSP
    MSPDir: ./crypto-config/peerOrganizations/privateuni.edu/msp
    Policies: &PrivateuniPolicies
      Readers:
          Type: Signature
          Rule: "OR('PrivateuniMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('PrivateuniMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('PrivateuniMSP.member')"
      Endorsement:
          Type: Signature
          Rule: "OR('PrivateuniMSP.member')"
    AnchorPeers:
      - Host: bus.privateuni.edu
        Port: 7051

  - &Interuni
    Name: Interuni
    ID: InteruniMSP
    MSPDir: ./crypto-config/peerOrganizations/interuni.edu/msp
    Policies: &InteruniPolicies
      Readers:
          Type: Signature
          Rule: "OR('InteruniMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('InteruniMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('InteruniMSP.member')"
      Endorsement:
          Type: Signature
          Rule: "OR('InteruniMSP.member')"
    AnchorPeers:
      - Host: arts.interuni.edu
        Port: 7051

#   ORDERER
Orderer: &OrdererDefaults

  OrdererType: solo

  Addresses:
    - orderer.natuni.edu:7050
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta  
        Rule: "ANY Admins"

    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
        Type: ImplicitMeta
        Rule: "ANY Writers"

  # Batch Timeout: The amount of time to wait before creating a batch
  BatchTimeout: 2s

  # Batch Size: Controls the number of messages batched into a block
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 98 MB
    PreferredMaxBytes: 512 KB

  Capabilities:
    <<: *OrdererCapabilities

Application: &ApplicationDefaults

  ACLs: &ACLsDefault
    # ACL policy for lscc's "getid" function
    lscc/ChaincodeExists: /Channel/Application/Readers
    # ACL policy for lscc's "getdepspec" function
    lscc/GetDeploymentSpec: /Channel/Application/Readers
    # ACL policy for lscc's "getccdata" function
    lscc/GetChaincodeData: /Channel/Application/Readers
    # ACL Policy for lscc's "getchaincodes" function
    lscc/GetInstantiatedChaincodes: /Channel/Application/Readers
    #---Query System Chaincode (qscc) function to policy mapping for access control---#
    # ACL policy for qscc's "GetChainInfo" function
    qscc/GetChainInfo: /Channel/Application/Readers    
    # ACL policy for qscc's "GetBlockByNumber" function
    qscc/GetBlockByNumber: /Channel/Application/Readers
    # ACL policy for qscc's  "GetBlockByHash" function
    qscc/GetBlockByHash: /Channel/Application/Readers
    # ACL policy for qscc's "GetTransactionByID" function
    qscc/GetTransactionByID: /Channel/Application/Readers
    # ACL policy for qscc's "GetBlockByTxID" function
    qscc/GetBlockByTxID: /Channel/Application/Readers
    #---Configuration System Chaincode (cscc) function to policy mapping for access control---#
    # ACL policy for cscc's "GetConfigBlock" function
    cscc/GetConfigBlock: /Channel/Application/Readers
    # ACL policy for cscc's "GetConfigTree" function
    cscc/GetConfigTree: /Channel/Application/Readers
    # ACL policy for cscc's "SimulateConfigTreeUpdate" function
    cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers
    #---Miscellanesous peer function to policy mapping for access control---#
    # ACL policy for invoking chaincodes on peer
    peer/Propose: /Channel/Application/Writers
    # ACL policy for chaincode to chaincode invocation
    peer/ChaincodeToChaincode: /Channel/Application/Readers
    #---Events resource to policy mapping for access control###---#
    # ACL policy for sending block events
    event/Block: /Channel/Application/Readers
    # ACL policy for sending filtered block events
    event/FilteredBlock: /Channel/Application/Readers
    # Chaincode Lifecycle Policies introduced in Fabric 2.x
    # ACL policy for _lifecycle's "CheckCommitReadiness" function
    _lifecycle/CheckCommitReadiness: /Channel/Application/Writers
    # ACL policy for _lifecycle's "CommitChaincodeDefinition" function
    _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers
    # ACL policy for _lifecycle's "QueryChaincodeDefinition" function
    _lifecycle/QueryChaincodeDefinition: /Channel/Application/Readers
    

  # Default policies
  Policies: &ApplicationDefaultPolicies
    # --channel-config-policy
    Endorsement:
        Type: ImplicitMeta
        Rule: "ANY Endorsement"
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        Rule: "ANY Admins"
    LifecycleEndorsement:
        Type: ImplicitMeta
        Rule: "ANY Endorsement"

  Organizations:

  Capabilities:
    <<: *ApplicationCapabilities

#   CHANNEL
Channel: &ChannelDefaults
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        Rule: "ANY Admins"
  Capabilities:
    <<: *ChannelCapabilities
 
#   PROFILES
Profiles:
  NatuniOrdererGenesis:
    <<: *ChannelDefaults
    Orderer:
        <<: *OrdererDefaults
        Organizations:
            - <<: *Orderer
    Consortiums:
      NatuniConsortium:
          Organizations:
            - <<: *Natuni
            - <<: *Privateuni
            - <<: *Interuni
    Application:
        <<: *ApplicationDefaults
        Organizations:
            - <<: *Natuni
            - <<: *Privateuni
            - <<: *Interuni
  NatuniChannel:
    <<: *ChannelDefaults
    Consortium: NatuniConsortium
    Application:
        <<: *ApplicationDefaults
        Organizations:
            - <<: *Natuni
            - <<: *Privateuni
            - <<: *Interuni